<!doctype html>
<html lang="en" data-reactroot="" data-reactid="1" data-react-checksum="-1764061442"><head data-reactid="2"><title data-reactid="3">Titanic | R</title><meta charset="utf-8" data-reactid="4"/><!-- react-text: 5 --><!-- /react-text --><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" data-reactid="6"/><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" data-reactid="7"/><meta name="fragment" content="!" data-reactid="8"/><meta name="keywords" content="R, Python, Data analysis, interactive, learning" data-reactid="9"/><meta name="description" content="Here is an example of Titanic: You&#x27;ve watched the movie Titanic by James Cameron (1997) again and after a good portion of sobbing you decide to investigate whether you&#x27;d have a chance of surviving this disaster." data-reactid="10"/><meta name="twitter:card" content="summary" data-reactid="11"/><meta name="twitter:site" content="@DataCamp" data-reactid="12"/><meta name="twitter:title" content="Titanic | R" data-reactid="13"/><meta name="twitter:description" content="Here is an example of Titanic: You&#x27;ve watched the movie Titanic by James Cameron (1997) again and after a good portion of sobbing you decide to investigate whether you&#x27;d have a chance of surviving this disaster." data-reactid="14"/><meta name="twitter:creator" content="@DataCamp" data-reactid="15"/><meta name="twitter:image:src" content="/public/assets/images/var/images/var/twitter_share.png" data-reactid="16"/><meta name="twitter:domain" content="www.datacamp.com" data-reactid="17"/><meta property="og:title" content="Titanic | R" data-reactid="18"/><meta property="og:image" content="/public/assets/images/var/linkedin_share.png" data-reactid="19"/><meta name="google-signin-clientid" content="892114885437-01a7plbsu1b2vobuhvnckmmanhb58h3a.apps.googleusercontent.com" data-reactid="20"/><meta name="google-signin-scope" content="email profile" data-reactid="21"/><meta name="google-signin-cookiepolicy" content="single_host_origin" data-reactid="22"/><link rel="icon" type="image/png" href="/public/assets/images/favicon.ico" data-reactid="23"/><link href="/public/assets/images/apple-icon.png" rel="apple-touch-icon" data-reactid="24"/><link href="/public/assets/images/apple-icon.png" rel="apple-touch-icon-precomposed" data-reactid="25"/><link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" data-reactid="26"/><link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css" data-reactid="27"/><link rel="stylesheet" href="/public/style-927d6a72c860dcbea142bbc9b7510873.css" data-reactid="28"/><script src="//use.typekit.net/pjc4zfc.js" data-reactid="29"></script><script charset="UTF-8" data-reactid="30">try{Typekit.load();}catch(e){}</script></head><body data-reactid="31"><div id="root" data-reactid="32"><div data-reactroot="" data-reactid="1" data-react-checksum="858140489"><section id="navigation" class="bg-navigation" data-reactid="2"><div class="clearfix" data-reactid="3"><a href="https://www.datacamp.com/" class="navbar--title" data-reactid="4"><div class="logo" data-reactid="5"></div><span class="logo-title" data-reactid="6">DataCamp</span></a><div data-reactid="7"><div class="__react_component_tooltip place-top type-dark " data-id="tooltip" data-reactid="8"></div><div class="__react_component_tooltip place-top type-dark " data-id="tooltip" data-reactid="9"></div><div class="__react_component_tooltip place-top type-dark " data-id="tooltip" data-reactid="10"></div><div class="navigation--buttons-center" data-onboarding="button-center" data-reactid="11"><a class="navigation--left" data-tip="true" data-for="nav-tp-prev" href="/courses/data-visualization-with-ggplot2-1/chapter-5-qplot-and-wrap-up?ex=7" data-reactid="12"><i class="fa fa-chevron-left" data-reactid="13"></i></a><a class="navigation--outline navigation--middle" data-tip="true" data-for="nav-tp-outline" href="" data-reactid="14"><i class="fa fa-bars" data-reactid="15"></i><span data-reactid="16">Course Outline</span></a><div style="display:inline-block;" data-tip="true" data-for="nav-tp-next" data-reactid="17"><a href="https://www.datacamp.com/courses/data-visualization-with-ggplot2-1" class="navigation--right" data-reactid="18"><i class="fa fa-chevron-right" data-reactid="19"></i></a></div></div></div><div class="navigation--buttons-right" data-reactid="20"><div class="app-status" id="app-status" data-reactid="21"><div class="hcSlide-wrapper" data-reactid="22"><!-- react-empty: 23 --></div></div><a style="position:relative;" href="" data-reactid="24"><div data-tip="true" data-for="tp-notifications" data-reactid="25"><div class="__react_component_tooltip place-top type-dark " data-id="tooltip" data-reactid="26"></div><i class="fa fa-bell-o hover-icon" data-reactid="27"></i></div></a><a style="position:relative;" href="" data-reactid="28"><div data-tip="true" data-for="tp-slides" data-reactid="29"><div class="__react_component_tooltip place-top type-dark " data-id="tooltip" data-reactid="30"></div><i class="fa fa-file-pdf-o hover-icon" data-reactid="31"></i></div></a><a style="position:relative;" href="" data-reactid="32"><div data-tip="true" data-for="tp-issue" data-reactid="33"><div class="__react_component_tooltip place-top type-dark " data-id="tooltip" data-reactid="34"></div><span class="fa-stack fa-lg" data-reactid="35"><i class="fa fa-circle-thin fa-stack-2x" data-reactid="36"></i><i class="fa fa-exclamation fa-stack-1x" data-reactid="37"></i></span></div></a></div></div></section><div class="exercise-area " data-reactid="38"><div data-reactid="39"><aside class="exercise--sidebar" style="width:40%;" data-reactid="40"><div class="exercise--sidebar-content" data-reactid="41"><div class="exercise--assignment exercise--typography" data-onboarding="assignment" data-reactid="42"><h1 class="exercise--title" data-reactid="43">Titanic</h1><div class="skills-tooltip" data-reactid="44"><!-- react-text: 45 -->100<!-- /react-text --><!-- react-text: 46 -->xp<!-- /react-text --></div><div data-reactid="47"><div data-reactid="48"><p>You've watched the movie Titanic by James Cameron (1997) again and after a good portion of sobbing you decide to investigate whether you'd have a chance of surviving this disaster.</p>

<p>To start your investigation, you decide to do some exploratory visualization with <a href="http://www.rdocumentation.org/packages/ggplot2/functions/ggplot"><code>ggplot()</code></a>.</p></div></div></div><div class="" data-reactid="49"><div class="exercise--instructions-title" data-reactid="50"><h2 data-reactid="51">Instructions</h2></div><div data-onboarding="instructions" class="exercise--instructions exercise--typography" data-reactid="52"><div data-reactid="53"><div class="exercise--instructions__content" data-reactid="54"><ul>
<li>Have a look at the <a href="http://www.rdocumentation.org/packages/utils/functions/str"><code>str()</code></a> of the <code>titanic</code> dataset, which has been loaded into your workspace. Looks like the data is pretty tidy!</li>
<li>First, have a look at the distribution of sexes within the classes of the ship. Use <a href="http://www.rdocumentation.org/packages/ggplot2/functions/ggplot"><code>ggplot()</code></a> with the data layer set to <code>titanic</code>. Map <code>factor(Pclass)</code> onto the <code>x</code> axis, <code>factor(Sex)</code> onto <code>fill</code> and draw a dodgy bar plot using <a href="http://www.rdocumentation.org/packages/ggplot2/functions/geom_bar"><code>geom_bar()</code></a>. By dodgy we mean that <code>position</code> has to be set to <code>"dodge"</code>.</li>
<li>These bar plots won't help you estimate your chances of survival. Copy the previous bar plot, but this time add a <a href="http://www.rdocumentation.org/packages/ggplot2/functions/facet_grid"><code>facet_grid()</code></a> layer: <code>". ~ Survived"</code>.</li>
<li>You want to include the final variable in the plot, <code>Age</code>. Start off by copying the previous <a href="http://www.rdocumentation.org/packages/ggplot2/functions/ggplot"><code>ggplot()</code></a> command. Add a mapping of <code>Age</code> onto the <code>y</code> axis. Replace <a href="http://www.rdocumentation.org/packages/ggplot2/functions/geom_bar"><code>geom_bar()</code></a> with <a href="http://www.rdocumentation.org/packages/ggplot2/functions/geom_jitter"><code>geom_jitter()</code></a> and set its attributes <code>size</code> to <code>3</code>, <code>alpha</code> to <code>0.5</code> and <code>position</code> set to <code>posn.j</code>. Make sure that <code>factor(Sex)</code> is mapped onto <code>col</code> instead of <code>fill</code> this time to correctly color the scatter plots.</li>
</ul></div></div><div class="sct-feedback" data-reactid="55"><div style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:scroll;z-index:-1;visibility:hidden;" data-reactid="56"><div style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:scroll;z-index:-1;visibility:hidden;" data-reactid="57"><div style="position:absolute;left:0;top:0;width:0;height:0;" data-reactid="58"></div></div><div style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:scroll;z-index:-1;visibility:hidden;" data-reactid="59"><div style="position:absolute;left:0;top:0;width:200%;height:200%;" data-reactid="60"></div></div></div><ul class="content--tab mono" data-reactid="61"><div style="display:inline-block;" data-tip="true" data-for="tp-hint" data-reactid="62"><div class="__react_component_tooltip place-top type-dark " data-id="tooltip" data-reactid="63"></div><a class="exercise--show-hint" href="" data-reactid="64"><i class="fa fa-lightbulb-o" data-reactid="65"></i><span data-reactid="66"><!-- react-text: 67 -->Take Hint<!-- /react-text --><!-- react-text: 68 --> (-<!-- /react-text --><!-- react-text: 69 -->30<!-- /react-text --><!-- react-text: 70 -->xp)<!-- /react-text --></span></a></div></ul></div></div></div></div></aside><section class="exercise--content" style="width:60%;" data-reactid="71"><div data-reactid="72"><div class="global-spinner" data-reactid="73"><object type="image/svg+xml" data="/public/assets/images/spinner.svg" data-reactid="74"></object></div><noscript data-reactid="75"></noscript></div></section></div><!-- react-empty: 76 --><div class="toastify toastify--top-right" style="pointer-events:none;" data-reactid="77"><span data-reactid="78"></span></div></div><!-- react-empty: 79 --><!-- react-empty: 80 --></div></div><script data-reactid="33">
            window.env= "production";
            window.release = "529";
          </script><script charset="UTF-8" data-reactid="34">window.PRELOADED_STATE={"chapter":{"current":{"skills":[{"id":1,"name":"R Programming","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"},{"id":4,"name":"Data Visualization","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"}],"badge_uncompleted_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811238","number":5,"slug":"chapter-5-qplot-and-wrap-up","last_updated_on":"12/08/2016","title_meta":"Chapter 5","nb_exercises":8,"free_preview":null,"slides_link":"https://s3.amazonaws.com/assets.datacamp.com/course/ggplot2/course_1/ggplot2_course1_ch5_slides.pdf","title":"qplot and wrap-up","xp":700,"id":1857,"description":"In this chapter you'll learn about qplot; it is a quick and dirty form of ggplot2. It’s not as intuitive as the full-fledged ggplot() function but may be useful in specific instances. This chapter also features a wrap-up video and corresponding data visualization exercises.","badge_completed_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811238"}},"exercises":{"current":7,"all":[{"sample_code":"","sct":"","aspect_ratio":56.25,"instructions":null,"question":"","hint":null,"possible_answers":[],"number":1,"video_hls":"//videos.datacamp.com/transcoded/774_ggplot2_1/v2/hls-ch5_1.master.m3u8","assignment":null,"attachments":null,"title":"qplot","xp":50,"language":"r","pre_exercise_code":"","solution":"","type":"VideoExercise","id":14402,"projector_key":null,"video_link":"//player.vimeo.com/video/149429464"},{"sample_code":"# The old way (shown)\nplot(mpg ~ wt, data = mtcars)\n\n# Using ggplot:\n\n\n\n# Using qplot:\n","sct":"test_ggplot(1)\n\ntest_function(\"qplot\", \"x\", eval = FALSE)\ntest_function(\"qplot\", \"y\", eval = FALSE)\ntest_function(\"qplot\", \"data\")\n\ntest_error()\nsuccess_msg(\"Good job!\")","instructions":"<ul>\n<li>Have a look at the base R plotting function. It plots <code>mpg</code> on the y-axis against <code>wt</code> on the x-axis. Create the same plot using <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a>.</li>\n<li>Create the same plot using <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a>.</li>\n</ul>","question":"","hint":"<ul>\n<li>For the first instruction, use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> and map <code>wt</code> to <code>x</code> and <code>mpg</code> to <code>y</code> within <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a>. Don't forget to add <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_point\"><code>geom_point()</code></a>.</li>\n<li>For the second instruction, use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> with 3 arguments: the first one is <code>wt</code>, the second one <code>mpg</code> and <code>data</code> is set to <code>mtcars</code>.</li>\n</ul>","possible_answers":[],"number":2,"assignment":"<p>For simple exploratory plots, there are a variety of functions available. <code>ggplot2</code> offers a powerful and diverse array of functions, but <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> allows for quick and dirty plots. Plus, we should also be familiar with basic plotting notation.</p>","attachments":null,"title":"Using qplot","xp":100,"language":"r","pre_exercise_code":"library(ggplot2)\nplot(mpg ~ wt, data = mtcars)","solution":"# The old way (shown)\nplot(mpg ~ wt, data = mtcars)\n\n# Using ggplot:\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point()\n\n# Using qplot:\nqplot(wt, mpg, data = mtcars) ","type":"NormalExercise","id":13906},{"sample_code":"# basic scatter plot:\n\n\n# Categorical:\n# cyl\n\n\n# gear\n\n\n# Continuous\n# hp\n\n\n# qsec\n","sct":"test_function_v2(\"qplot\", \"x\", eval = FALSE, index = 1)\ntest_function_v2(\"qplot\", \"y\", eval = FALSE, index = 1)\ntest_function_v2(\"qplot\", \"data\", index = 1)\n\nmsg <- \"For [`qplot()`](http://www.rdocumentation.org/packages/ggplot2/functions/qplot) call %d, use the same values for `x`, `y` and `data` as the base scatter plot.\"\n# Categorical\nfor (i in 2:3) {\n  test_function_v2(\"qplot\", \"x\", eval = FALSE, index = i,\n                   incorrect_msg = sprintf(msg, i),\n                   not_called_msg = sprintf(msg, i))\n  test_function_v2(\"qplot\", \"y\", eval = FALSE, index = i,\n                   incorrect_msg = sprintf(msg, i),\n                   not_called_msg = sprintf(msg, i))\n  test_function_v2(\"qplot\", \"data\", index = i,\n                   incorrect_msg = sprintf(msg, i),\n                   not_called_msg = sprintf(msg, i))\n  test_function_v2(\"qplot\", eval = FALSE, index = i,\n                   incorrect_msg = \"Don't forget to use [`factor()`](http://www.rdocumentation.org/packages/base/functions/factor) for the categorical variables.\")\n}\n\n# Continuous\nfor (i in 4:5) {\n  test_function_v2(\"qplot\", \"x\", eval = FALSE, index = i,\n                   incorrect_msg = sprintf(msg, i),\n                   not_called_msg = sprintf(msg, i))\n  test_function_v2(\"qplot\", \"y\", eval = FALSE, index = i,\n                   incorrect_msg = sprintf(msg, i),\n                   not_called_msg = sprintf(msg, i))\n  test_function_v2(\"qplot\", \"data\", index = i,\n                   incorrect_msg = sprintf(msg, i),\n                   not_called_msg = sprintf(msg, i))\n  test_function_v2(\"qplot\", eval = FALSE, index = i,\n                 incorrect_msg = \"You don't have to use [`factor()`](http://www.rdocumentation.org/packages/base/functions/factor) for the continuous variables.\")\n}\n\ntest_error()\nsuccess_msg(\"Good job!\")","instructions":"<ul>\n<li>Begin with a basic scatter plot of <code>mpg</code> vs. <code>wt</code> from the <code>mtcars</code> dataset.</li>\n<li>Map 2 categorical variables (<code>cyl</code> and <code>gear</code>) onto <code>size</code>. </li>\n<li>Map 2 continuous variables (<code>hp</code> and <code>qsec</code>) onto <code>col</code>.</li>\n</ul>","question":"","hint":"<ul>\n<li>For the first scatter plot, use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> with 3 arguments: the first two are <code>wt</code> and <code>mpg</code>. <code>data</code> is set to <code>mtcars</code>.</li>\n<li>For the categorical variables, add the variable <code>size</code> for each of them. Transform the variables to factors using <a href=\"http://www.rdocumentation.org/packages/base/functions/factor\"><code>factor()</code></a>.</li>\n<li>For the continuous variables, you don't have to use <a href=\"http://www.rdocumentation.org/packages/base/functions/factor\"><code>factor()</code></a>. Map onto <code>col</code>.</li>\n</ul>","possible_answers":[],"number":3,"assignment":"<p>We already saw how some aesthetics are only applicable to categorical variables, such as shape, labels and linetypes. But just because others, such as size and color (and hence fill), can be applied to both categorical and continuous variables, it doesn't mean they are suitable for both.</p>","attachments":null,"title":"Using aesthetics","xp":100,"language":"r","pre_exercise_code":"library(ggplot2)\n","solution":"# basic scatter plot:\nqplot(wt, mpg, data = mtcars)\n\n# Categorical:\n# cyl\nqplot(wt, mpg, data = mtcars, size = factor(cyl))\n\n# gear\nqplot(wt, mpg, data = mtcars, size = factor(gear))\n\n# Continuous\n# hp\nqplot(wt, mpg, data = mtcars, col = hp)\n\n# qsec\nqplot(wt, mpg, data = mtcars, col = qsec)","type":"NormalExercise","id":13907},{"sample_code":"# qplot() with x only\n\n\n# qplot() with x and y\n\n\n# qplot() with geom set to jitter manually\n","sct":"test_function_v2(\"qplot\", \"data\", index = 1)\ntest_function_v2(\"qplot\", \"x\", eval = FALSE, index = 1)\n\ntest_function_v2(\"qplot\", \"data\", index = 2)\ntest_function_v2(\"qplot\", \"x\", eval = FALSE, index = 2)\ntest_function_v2(\"qplot\", \"y\", eval = FALSE, index = 2)\n\n\ntest_function_v2(\"qplot\", \"data\", index = 3)\ntest_function_v2(\"qplot\", \"x\", eval = FALSE, index = 3)\ntest_function_v2(\"qplot\", \"y\", eval = FALSE, index = 3)\ntest_function_v2(\"qplot\", \"geom\", eval = FALSE, index = 3)\n\ntest_error()\nsuccess_msg(\"Good job!\")","instructions":"<ul>\n<li>Make a quick plot using <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a>. Use the <code>mtcars</code> dataset and plot only <code>factor(cyl)</code> onto <code>x</code>. Which geom does <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> choose?</li>\n<li>Extend the previous <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> command so that it maps <code>factor(vs)</code> onto <code>y</code>. Which geom does <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> use now?</li>\n<li>The previous plot had overlapping points. For the last instruction, copy the previous <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a>, but manually set <code>geom</code> to <code>\"jitter\"</code> in <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a>.</li>\n</ul>","question":"","hint":"<ul>\n<li>For the first instruction, use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> with 2 arguments: <code>x</code> and <code>data</code>.</li>\n<li>For the second instruction, copy the previous <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> instruction and add an argument: <code>y</code>.</li>\n<li>For the last instruction, copy the previous <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> instruction and add an argument: <code>geom</code>.</li>\n</ul>","possible_answers":[],"number":4,"assignment":"<p><code>qplot</code> automatically takes care of assigning a geom to our plot given the type of data, but we can specify the geom ourselves.</p>","attachments":null,"title":"Choosing geoms, part 1","xp":100,"language":"r","pre_exercise_code":"library(ggplot2)","solution":"# qplot() with x only\nqplot(factor(cyl), data = mtcars) \n\n# qplot() with x and y\nqplot(factor(cyl), factor(vs), data = mtcars) \n\n# qplot() with geom set to jitter manually\nqplot(factor(cyl), factor(vs), data = mtcars, geom = \"jitter\") ","type":"NormalExercise","id":14454},{"sample_code":"# Make a dot plot with ggplot\nggplot(mtcars, aes(cyl, wt, fill = factor(am)))\n\n\n# qplot with geom \"dotplot\", binaxis = \"y\" and stackdir = \"center\"\n","sct":"msg <- \"You don't have to change the %s layer of the %s [`ggplot()`](http://www.rdocumentation.org/packages/ggplot2/functions/ggplot) command.\"\ntest_ggplot(1, data_fail_msg = sprintf(msg, \"data\", \"first\"), aes_fail_msg = sprintf(msg, \"aesthetics\", \"first\"))\n\ntest_function(\"qplot\", \"x\", eval = FALSE)\ntest_function(\"qplot\", \"y\", eval = FALSE)\ntest_function(\"qplot\", \"fill\", eval = FALSE)\ntest_function(\"qplot\", \"data\")\ntest_function(\"qplot\", \"geom\")\ntest_function(\"qplot\", \"binaxis\")\ntest_function(\"qplot\", \"stackdir\")\n\ntest_error()\nsuccess_msg(\"Good job!\")","instructions":"<ul>\n<li>A jitter plot is shown that plots <code>cyl</code> on the <code>x</code> axis and <code>wt</code> on the <code>y</code> axis. Take a look.</li>\n<li>An alternative of this jitter plot would be a dotplot. The data and aesthetics layer have been provided for you in the first <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> command. Add <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_dotplot\"><code>geom_dotplot()</code></a> to this command with attributes <code>stackdir</code> set to <code>\"center\"</code> and <code>binaxis</code> set to <code>\"y\"</code>.</li>\n<li>Try to convert this <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> command to a <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> command.</li>\n</ul>","question":"","hint":"<ul>\n<li>For the first instruction, have a long look at the plot which is drawn for you.</li>\n<li>For the second instruction, don't change anything about the first <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> command, just add <code>geom_dotplot(stackdir = \"center\", binaxis = \"y\")</code> to it.</li>\n<li>All of the arguments you defined in <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a>, <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a> and <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_dotplot\"><code>geom_dotplot()</code></a> can be defined within <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/qplot\"><code>qplot()</code></a> as well. Just don't forget to add <code>geom = \"dotplot\"</code> too!</li>\n</ul>","possible_answers":[],"number":5,"assignment":"<p>We saw various types of plots which can be collectively referred to as dot plots, e.g. a continuous y axis described by a categorical x axis and a point geom. However, there is also a <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_dotplot\"><code>geom_dotplot()</code></a>, which we'll consider here. It is associated with a binning statistic.</p>","attachments":null,"title":"Choosing geoms, part 2 - dotplot","xp":100,"language":"r","pre_exercise_code":"library(ggplot2)\nggplot(mtcars, aes(x = cyl, y = wt, col = factor(am))) +\n  geom_point(position = position_jitter(0.2))","solution":"# Make a dot plot with ggplot:\nggplot(mtcars, aes(cyl, wt, fill = factor(am))) +\n  geom_dotplot(stackdir = \"center\", binaxis = \"y\")\n\n# qplot with geom \"dotplot\", binaxis = \"y\" and stackdir = \"center\"\nqplot(cyl, wt, data = mtcars, fill = factor(am), geom = \"dotplot\", binaxis = \"y\", stackdir = \"center\")","type":"NormalExercise","id":14455},{"sample_code":"","sct":"","aspect_ratio":56.25,"instructions":null,"question":"","hint":null,"possible_answers":[],"number":6,"video_hls":"//videos.datacamp.com/transcoded/774_ggplot2_1/v1/hls-ch5_2.master.m3u8","assignment":null,"attachments":null,"title":"Wrap-up","xp":50,"language":"r","pre_exercise_code":"","solution":"","type":"VideoExercise","id":14456,"projector_key":null,"video_link":"//player.vimeo.com/video/149429463"},{"sample_code":"# ChickWeight is available in your workspace\n\n# Check out the head of ChickWeight\n\n\n# Use ggplot() for the second instruction\n\n\n\n# Use ggplot() for the third instruction\n\n\n\n# Use ggplot() for the last instruction\n\n\n","sct":"test_function(\"head\", \"x\")\n\ntest_ggplot(1)\ntest_ggplot(2)\ntest_ggplot(3)\n\ntest_error()\nsuccess_msg(\"Good job!\")","instructions":"<ul>\n<li>Have a look at the <a href=\"http://www.rdocumentation.org/packages/utils/functions/head\"><code>head()</code></a> of the <code>ChickWeight</code> dataset, which has been loaded into your workspace. Looks like the data is pretty tidy!</li>\n<li>First, make a plot which simply plots a line for each chick. Use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> and map <code>Time</code> to <code>x</code> and <code>weight</code> to <code>y</code> within the <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a> function. Add <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_path\"><code>geom_line()</code></a> at the end to draw the lines. To draw one line per chick, add <code>group = Chick</code> to the <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a> of <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_path\"><code>geom_line()</code></a>.</li>\n<li>Oops, that looks pretty chaotic and you can't really conclude anything from it. Let's try again. Copy the previous command but add a mapping within the aesthetics layer in <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a>: map <code>Diet</code> onto <code>color</code>.</li>\n<li>There's some more information here, although it would be better to have some summary statistics as well. Let's think this over. Copy the previous command and add <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_smooth\"><code>geom_smooth()</code></a> with attributes <code>lwd</code> set to <code>2</code> and <code>se</code> set to <code>False</code>. Set <code>alpha</code> of <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_path\"><code>geom_line()</code></a> to <code>0.3</code>.</li>\n</ul>","question":"","hint":"<ul>\n<li>Use <code>head(ChickWeight)</code> to check the first few rows of this dataset.</li>\n<li>Use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> with the data layer set to <code>ChickWeight</code> and add <code>aes(x = Time, y = weight)</code>. Extend the <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> command with <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_path\"><code>geom_line()</code></a> using the <code>+</code> operator. Within <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_path\"><code>geom_line()</code></a>, you should also add an aesthetics layer, <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a>, with <code>group = Chick</code>.</li>\n<li>Copy the previous command and add <code>col = Diet</code> within the <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a> of <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a>.</li>\n<li>Copy the previous command and add a <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_smooth\"><code>geom_smooth()</code></a> layer with <code>lwd = 2</code> and <code>se = FALSE</code>. Change <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_path\"><code>geom_line()</code></a> so that <code>alpha = 0.3</code> (don't set this within <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a>).</li>\n</ul>","possible_answers":[],"number":7,"assignment":"<p>The <code>ChickWeight</code> dataset is a data frame which represents the progression of weight of several chicks. The little chicklings are each given a specific diet. There are four types of diet and the farmer wants to know which one fattens the chicks the fastest.</p>\n\n<p>It's time to do some exploratory statistics on the data frame using the techniques you learned in this course! Let's do some <code>ggplot</code>-ing!</p>","attachments":null,"title":"Chicken weight","xp":100,"language":"r","pre_exercise_code":"library(ggplot2)","solution":"# ChickWeight is available in your workspace\n\n# Check out the head of ChickWeight\nhead(ChickWeight)\n\n# Use ggplot() for the second instruction\nggplot(ChickWeight, aes(x = Time, y = weight)) + \n  geom_line(aes(group = Chick))\n\n# Use ggplot() for the third instruction\nggplot(ChickWeight, aes(x = Time, y = weight, col = Diet)) + \n  geom_line(aes(group = Chick))\n\n# Use ggplot() for the last instruction\nggplot(ChickWeight, aes(x = Time, y = weight, col = Diet)) + \n  geom_line(aes(group = Chick), alpha = 0.3) + \n  geom_smooth(lwd = 2, se = FALSE)","type":"NormalExercise","id":15125},{"sample_code":"# titanic is avaliable in your workspace\n\n# Check out the structure of titanic\n\n\n# Use ggplot() for the first instruction\n\n\n\n# Use ggplot() for the second instruction\n\n\n# Position jitter (use below)\nposn.j <- position_jitter(0.5, 0)\n\n# Use ggplot() for the last instruction\n\n\n","sct":"test_function(\"str\", \"object\")\n\ntest_ggplot(1)\ntest_ggplot(2)\ntest_ggplot(3)\n\ntest_error()\nsuccess_msg(\"Good job!\")","instructions":"<ul>\n<li>Have a look at the <a href=\"http://www.rdocumentation.org/packages/utils/functions/str\"><code>str()</code></a> of the <code>titanic</code> dataset, which has been loaded into your workspace. Looks like the data is pretty tidy!</li>\n<li>First, have a look at the distribution of sexes within the classes of the ship. Use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> with the data layer set to <code>titanic</code>. Map <code>factor(Pclass)</code> onto the <code>x</code> axis, <code>factor(Sex)</code> onto <code>fill</code> and draw a dodgy bar plot using <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_bar\"><code>geom_bar()</code></a>. By dodgy we mean that <code>position</code> has to be set to <code>\"dodge\"</code>.</li>\n<li>These bar plots won't help you estimate your chances of survival. Copy the previous bar plot, but this time add a <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/facet_grid\"><code>facet_grid()</code></a> layer: <code>\". ~ Survived\"</code>.</li>\n<li>You want to include the final variable in the plot, <code>Age</code>. Start off by copying the previous <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> command. Add a mapping of <code>Age</code> onto the <code>y</code> axis. Replace <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_bar\"><code>geom_bar()</code></a> with <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_jitter\"><code>geom_jitter()</code></a> and set its attributes <code>size</code> to <code>3</code>, <code>alpha</code> to <code>0.5</code> and <code>position</code> set to <code>posn.j</code>. Make sure that <code>factor(Sex)</code> is mapped onto <code>col</code> instead of <code>fill</code> this time to correctly color the scatter plots.</li>\n</ul>","question":"","hint":"<ul>\n<li>Use <code>str(titanic)</code> to check the first few lines of this dataset.</li>\n<li>Use <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> with the data layer set to <code>titanic</code> and add <code>aes(x = factor(Pclass), y = factor(Sex))</code>. Extend the <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a> command with <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_bar\"><code>geom_bar()</code></a> using the <code>+</code> operator. Within <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_path\"><code>geom_line()</code></a>, set <code>position</code> to <code>\"dodge\"</code>.</li>\n<li>Copy the previous command and add <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/facet_grid\"><code>facet_grid()</code></a> with the instructed formula.</li>\n<li>Copy the previous command and replace <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/geom_bar\"><code>geom_bar()</code></a> with <code>geom_jitter(size = 3, alpha = 0.5, position = posn.j)</code>. Also add <code>y = Age</code> to the <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/aes\"><code>aes()</code></a> within <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a>. <code>posn.j</code> had been created for you.</li>\n</ul>","possible_answers":[],"number":8,"user":{"isHintShown":false,"rstudio":{"isReady":false,"settings":{},"showHistory":false,"cards":{"messages":[],"currentRow":0}},"editorTabs":{"script":{"title":"script.R","props":{"active":true,"code":"# titanic is avaliable in your workspace\n\n# Check out the structure of titanic\n\n\n# Use ggplot() for the first instruction\n\n\n\n# Use ggplot() for the second instruction\n\n\n# Position jitter (use below)\nposn.j <- position_jitter(0.5, 0)\n\n# Use ggplot() for the last instruction\n\n\n","extra":{},"submitTitle":"Submit Answer","resetCode":"# titanic is avaliable in your workspace\n\n# Check out the structure of titanic\n\n\n# Use ggplot() for the first instruction\n\n\n\n# Use ggplot() for the second instruction\n\n\n# Position jitter (use below)\nposn.j <- position_jitter(0.5, 0)\n\n# Use ggplot() for the last instruction\n\n\n"}}},"outputMarkdownTabs":{},"markdown":{"titles":["Knit PDF","Knit HTML"],"activeTitle":"Knit HTML"},"currentXp":100,"graphicalTabs":{"plot":{"extraClass":"animation--flash","title":"Plots","props":{"sources":[],"currentIndex":0}},"html":{"extraClass":"animation--flash","title":"HTML Viewer","props":{"sources":[],"currentIndex":0}}},"feedbackMessages":[],"lastSubmittedCode":"","ltiStatus":{},"consoleSqlTabs":{"query_result":{"extraClass":"","title":"query result","props":{"active":true,"isNotView":true,"message":"No query executed yet..."}}},"consoleTabs":{"console":{"title":"R Console","props":{"active":true,"code":"> ","extra":{"ranges":[],"outputs":[]}}},"slides":{"title":"Slides","props":{"active":false}}},"inputMarkdownTabs":{},"consoleHistory":[]},"assignment":"<p>You've watched the movie Titanic by James Cameron (1997) again and after a good portion of sobbing you decide to investigate whether you'd have a chance of surviving this disaster.</p>\n\n<p>To start your investigation, you decide to do some exploratory visualization with <a href=\"http://www.rdocumentation.org/packages/ggplot2/functions/ggplot\"><code>ggplot()</code></a>.</p>","attachments":null,"title":"Titanic","xp":100,"language":"r","pre_exercise_code":"library(ggplot2)\ntitanic <- read.csv(\"http://s3.amazonaws.com/assets.datacamp.com/course/ggplot2/course_1/titanic.csv\", stringsAsFactors = FALSE)","solution":"# titanic is avaliable in your workspace\n\n# Check out the structure of titanic\nstr(titanic)\n\n# Use ggplot() for the first instruction\nggplot(titanic, aes(x = factor(Pclass), fill = factor(Sex))) + \n  geom_bar(position = \"dodge\")\n\n# Use ggplot() for the second instruction\nggplot(titanic, aes(x = factor(Pclass), fill = factor(Sex))) + \n  geom_bar(position = \"dodge\") + \n  facet_grid(. ~ Survived)\n\n# Position jitter (use below)\nposn.j <- position_jitter(0.5, 0)\n\n# Use ggplot() for the last instruction\nggplot(titanic, aes(x = factor(Pclass), y = Age, col = factor(Sex))) + \n  geom_jitter(size = 3, alpha = 0.5, position = posn.j) + \n  facet_grid(. ~ Survived)","type":"NormalExercise","id":15126}]},"course":{"difficulty_level":2,"reduced_outline":false,"shared_image":"shared-r:3fafbbf033a705f4cda885a51f876843","skills":[{"skill_id":1,"total":5250,"name":"R Programming"},{"skill_id":4,"total":5200,"name":"Data Visualization"}],"active_image":"course-774-prod:c2eabe2d87c32201448168bdcdb10d16","author_field":null,"chapters":[{"skills":[{"id":1,"name":"R Programming","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"},{"id":4,"name":"Data Visualization","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"}],"badge_uncompleted_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811194","number":1,"slug":"chapter-1-introduction-30dbf683-e5ab-4c76-9bbd-3b3afbf15383","last_updated_on":"09/03/2017","title_meta":"Chapter 1","nb_exercises":12,"free_preview":true,"slides_link":"https://s3.amazonaws.com/assets.datacamp.com/course/ggplot2/course_1/ggplot2_course1_ch1_slides.pdf","title":"Introduction","xp":950,"id":1830,"description":"In this chapter we’ll get you into the right frame of mind for developing meaningful visualizations with R. You’ll understand that as a communications tool, visualizations require you to think about your audience first. You’ll also be introduced to the basics of ggplot2 - the 7 different grammatical elements (layers) and aesthetic mappings.","badge_completed_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811194"},{"skills":[{"id":1,"name":"R Programming","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"},{"id":4,"name":"Data Visualization","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"}],"badge_uncompleted_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811207","number":2,"slug":"chapter-2-data","last_updated_on":"09/03/2017","title_meta":"Chapter 2","nb_exercises":12,"free_preview":null,"slides_link":"https://s3.amazonaws.com/assets.datacamp.com/course/ggplot2/course_1/ggplot2_course1_ch2_slides.pdf","title":"Data","xp":950,"id":1831,"description":"The structure of your data will dictate how you construct plots in ggplot2. In this chapter, we’ll explore the iris dataset from several different perspectives to showcase this concept. You’ll see that making your data conform to a structure that matches the plot in mind will make the task of visualization much easier through several R data visualization examples.","badge_completed_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811207"},{"skills":[{"id":1,"name":"R Programming","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"},{"id":4,"name":"Data Visualization","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"}],"badge_uncompleted_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811221","number":3,"slug":"chapter-3-aesthetics","last_updated_on":"09/03/2017","title_meta":"Chapter 3","nb_exercises":14,"free_preview":null,"slides_link":"https://s3.amazonaws.com/assets.datacamp.com/course/ggplot2/course_1/ggplot2_course1_ch3_slides.pdf","title":"Aesthetics","xp":1200,"id":1832,"description":"Aesthetic mappings are the cornerstone of the grammar of graphics plotting concept. This is where the magic happens - converting continuous and categorical data into visual scales that provide access to a large amount of information in a very short time. In this chapter we’ll understand how to choose the best aesthetic mappings for your data.","badge_completed_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811221"},{"skills":[{"id":1,"name":"R Programming","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"},{"id":4,"name":"Data Visualization","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"}],"badge_uncompleted_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450810903","number":4,"slug":"chapter-4-geometries","last_updated_on":"12/08/2016","title_meta":"Chapter 4","nb_exercises":16,"free_preview":null,"slides_link":"https://s3.amazonaws.com/assets.datacamp.com/course/ggplot2/course_1/ggplot2_course1_ch4_slides.pdf","title":"Geometries","xp":1450,"id":1833,"description":"A plot’s geometry dictates what visual elements will be used. In this chapter, we’ll familiarize you with the geometries used in the three most common plot types you’ll encounter - scatter plots, bar charts and line plots. We’ll look at a variety of different ways to construct these plots.","badge_completed_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450810903"},{"skills":[{"id":1,"name":"R Programming","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"},{"id":4,"name":"Data Visualization","created_at":"2015-05-20T08:31:55.000Z","updated_at":"2015-05-20T08:31:55.000Z"}],"badge_uncompleted_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811238","number":5,"slug":"chapter-5-qplot-and-wrap-up","last_updated_on":"12/08/2016","title_meta":"Chapter 5","nb_exercises":8,"free_preview":null,"slides_link":"https://s3.amazonaws.com/assets.datacamp.com/course/ggplot2/course_1/ggplot2_course1_ch5_slides.pdf","title":"qplot and wrap-up","xp":700,"id":1857,"description":"In this chapter you'll learn about qplot; it is a quick and dirty form of ggplot2. It’s not as intuitive as the full-fledged ggplot() function but may be useful in specific instances. This chapter also features a wrap-up video and corresponding data visualization exercises.","badge_completed_url":"https://assets.datacamp.com/production/course_774/badges/ggplot2_course1_r.png?1450811238"}],"time_needed":"5 hours","author_image":"https://assets.datacamp.com/production/course_774/author_images/rick_alpha.png?1450714122","runtime_config":null,"image_url":"https://assets.datacamp.com/production/course_774/shields/thumb/ggplot2_course1_r.png?1477576441","topic_id":4,"slug":"data-visualization-with-ggplot2-1","last_updated_on":"10/03/2017","paid":true,"university":null,"state":"live","author_bio":null,"should_cache":true,"sharing_links":{"twitter":"http://bit.ly/1eWTMJh","facebook":"http://bit.ly/1iS42Do"},"title":"Data Visualization with ggplot2 (Part 1)","xp":5250,"image_thumbnail_url":"https://assets.datacamp.com/production/course_774/shields/thumb_home/ggplot2_course1_r.png?1477576441","short_description":"Learn to produce meaningful and beautiful data visualizations with ggplot2 by understanding the grammar of graphics.","nb_of_subscriptions":37568,"type":"datacamp","link":"https://www.datacamp.com/courses/data-visualization-with-ggplot2-1","id":774,"description":"The ability to produce meaningful and beautiful data visualizations is an essential part of your skill set as a data scientist. This course, the first R data visualization tutorial in the series, introduces you to the principles of good visualizations and the grammar of graphics plotting concepts implemented in the ggplot2 package. ggplot2 has become the go-to tool for flexible and professional plots in R. Here, we’ll examine the first three essential layers for making a plot - Data, Aesthetics and Geometries. By the end of the course you will be able to make complex exploratory plots.","programming_language":"r"},"location":{"current":{"pathname":"/courses/data-visualization-with-ggplot2-1/chapter-5-qplot-and-wrap-up","query":{"ex":8},"host":"campus-react-elb-prod-613344532.us-east-1.elb.amazonaws.com"},"backendSession":null,"settings":null,"user":null},"autocomplete":{},"backendSession":{"status":{"code":"none","text":""},"isInitSession":false},"settings":{},"user":{"settings":{}}};</script><script type="text/x-mathjax-config" data-reactid="35">MathJax && MathJax.Hub && MathJax.Hub.Config && MathJax.Hub.Config({
              messageStyle: "none"
            });</script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML" data-reactid="36"></script><script src="//cdn.datacamp.com/datacamp-analytics-1.1.1.min.js" data-reactid="37"></script><script src="/public/client-a7bee8b24c879fdd57a8.js" data-reactid="38"></script></body></html>